plugins {
    id 'com.android.library'
    id 'maven-publish'
}

def hasSigning = project.hasProperty('KEYSTORE') &&
        project.hasProperty('KEYSTORE_PASSWORD') &&
        project.hasProperty('KEY_PASSWORD')

android {
    namespace 'io.hopmon'
    compileSdkVersion 33

    resourcePrefix "hopmon_"
    buildFeatures { buildConfig true }

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 33
        versionCode 6
        versionName "12.0.5"
        buildConfigField "String", "VERSION_NAME", "\"12.0.5\""
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    signingConfigs {
        if (hasSigning) {
            release {
                keyAlias 'hopmon'
                keyPassword KEY_PASSWORD
                // If KEYSTORE is an absolute path, this is fine. Otherwise point directly to file(KEYSTORE)
                storeFile file(KEYSTORE)
                storePassword KEYSTORE_PASSWORD
            }
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (hasSigning) {
                signingConfig signingConfigs.release
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        jniLibs { useLegacyPackaging true }
    }

    sourceSets {
        main { jniLibs.srcDirs = ['src/main/jniLibs'] }
    }

    // ✅ This is the correct place for singleVariant
    publishing {
        singleVariant("release") {
            withSourcesJar()
        }
        // If you later publish flavors, add: singleVariant("fireARelease") { withSourcesJar() } etc.
    }
}

// ✅ Clean Maven Publish – no hardcoded AAR path, respects JitPack -Pgroup/-Pversion
afterEvaluate {
    publishing {
        publications {
            register("sdkRelease", MavenPublication) {
                from(components["release"])
                groupId = (project.findProperty("group") ?: "com.github.Drorita").toString()
                artifactId = "hopmnd"                 // <- coordinates consumers will use
                version = (project.findProperty("version") ?: "v2.0.1").toString()

                pom {
                    name.set("Hopmn prox")
                    description.set("Android Hopmn clean SDK AAR")
                    licenses {
                        license {
                            name.set("The Apache Software License, Version 2.0")
                            url.set("http://www.apache.org/licenses/LICENSE-2.0.txt")
                        }
                    }
                }
            }
            // Add more publications here if you want separate flavor artifacts
        }

        // No need to configure repositories for JitPack. It uses mavenLocal automatically.
        // (Leave this empty; JitPack runs `publishToMavenLocal`.)
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'com.android.volley:volley:1.2.1'
    implementation 'org.codehaus.groovy:groovy-all:2.5.14'
}

configurations.all {
    exclude group: 'org.codehaus.groovy'
}
